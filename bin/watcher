#!/bin/bash
LANG=C
LC_ALL=C

MAILTO=

MODE=$1
TARGET=$2
TIMEOUT=3
ERROR_NOTIFY_LIMIT=3

################################################################################
# 共通変数 (グローバル・固定) 設定
PROGNAME=WATCHER
LOGDIR=${HOME}/logs
TMPDIR=${HOME}/.TMP
OLDLOG_DAY=32
DATE_TODAY=$(date +%Y-%m-%d)
DATE_LATEST=$(date +%Y-%m-%d --date="${OLDLOG_DAY} days ago")

DATE=$(date)
STATMSG="STATUS=1"
MESSAGE="${TARGET} ${MODE^^} NG"

LOGFILE=${LOGDIR}/${DATE_TODAY}_${PROGNAME}_${MODE^^}.log
LOGFILE_OLDEST=${LOGDIR}/${DATE_LATEST}_${PROGNAME}_${MODE^^}.log
ERROR_TARGET=$(echo ${TARGET} | sed -e "s/^http:\/\///g" -e "s/^https:\/\///g" -e "s/\/$//")
ERROR_COUNTFILE=${TMPDIR}/${PROGNAME}_${MODE^^}_${ERROR_TARGET}.error
################################################################################


################################################################################
# Pre-processing
PREPROCESSING_FUNCTION(){
# ログディレクトリがなければmkdirする
if [ ! -d ${LOGDIR} ];
then
  mkdir -p ${LOGDIR}
fi

# ${HOME}/.TMPディレクトリがなければmkdirする
if [ ! -d ${TMPDIR} ];
then
  mkdir -p ${TMPDIR}
fi
}
################################################################################


################################################################################
USAGE_FUNCTION(){
cat << _EOL_
Usage :
        Syntax) $0 <MODE> <TARGET>
        $0 ping example.com
        $0 http https://example.com/
_EOL_
}
################################################################################


################################################################################
ERROR_MAIL_SEND_FUNCTION(){
# mailコマンドの有無を確認し、なければメッセージを表示して異常終了する
MAILX_EXIST_STATUS=$(which mail | > /dev/null ; echo $?)
if [ ! 0 = ${MAILX_EXIST_STATUS} ];
then
  echo -e "$(date)\t${PROGNAME}\tstatus=128\tERROR. Please Install mailx." | \
  tee -a ${LOGFILE}
  exit 1
fi

# メール送信処理
LANG=ja_JP.utf8
TITLE="${DATE} ${TARGET} ${MODE} NG. From $(uname -n)"
cat << _EOL_ | mail -s "${TITLE}" ${MAILTO}
${DATE}
監視サーバー $(uname -n) より、
${TARGET} への ${MODE} 異常を検出しました。

_EOL_
LANG=C
}
################################################################################


################################################################################
# ping監視を行うPING関数
#   TARGETに対して1回pingを実行する。
#   pingコマンドまたはtimeoutコマンドの返り値で成否判断する。
PING_FUNCTION(){
PING_STATUS=$(ping -c 1 -w ${TIMEOUT} ${TARGET} > /dev/null ; echo $?)

LOGROTATE_FUNCTION
if [ ! 0 = ${PING_STATUS} ];
then
  ERROR_FUNCTION
else
  OK_FUNCTION
fi
}
################################################################################


################################################################################
LOGROTATE_FUNCTION(){
if [ -f ${LOGFILE_OLDEST} ];
then
  rm -f ${LOGFILE_OLDEST}
fi
}
################################################################################


################################################################################
OK_FUNCTION(){
if [ -f ${ERROR_COUNTFILE} ];
then
  rm -f ${ERROR_COUNTFILE}
fi
}
################################################################################


################################################################################
# http監視を行うHTTP関数
#   TARGETに対してcurlでアクセスし、ステータスコードを取得する。
#   curlコマンドまたはtimeoutコマンドの返り値で成否判断する。
HTTP_FUNCTION(){
LOGROTATE_FUNCTION

HTTP_STATUSCODE=$(curl -LIs ${TARGET} -o /dev/null -w '%{http_code}\n')
if [ ! 200 = ${HTTP_STATUSCODE} ];
then
  if [ ! 0 = $(echo ${HTTP_STATUS} | egrep '^(3[0-9]{2})$' > /dev/null ; echo $?) ];
  then
    ERROR_FUNCTION
  fi
else
  OK_FUNCTION
fi
}
################################################################################


################################################################################
ERROR_FUNCTION(){
echo -e "${DATE}\t${PROGNAME}\t${STATMSG}\t${MESSAGE}"          | \
  tee -a ${ERROR_COUNTFILE}                                | \
  tee -a ${LOGFILE}

if [ -f ${ERROR_COUNTFILE} ];
then
  ERROR_COUNT_NOW=$(wc -l ${ERROR_COUNTFILE} | awk '{print $1}')
  if [ ! ${ERROR_COUNT_NOW} -gt ${ERROR_NOTIFY_LIMIT} ];
  then
    ERROR_MAIL_SEND_FUNCTION
  fi
fi
}
################################################################################

################################################################################
MAIN_FUNCTION(){
PREPROCESSING_FUNCTION

if [ ${MODE^^} = PING ];
then
  PING_FUNCTION
fi

if [ ${MODE^^} = HTTP ];
then
  HTTP_FUNCTION
fi
}
################################################################################


################################################################################
# 引数の数が2つでなければUsageを表示して異常終了する
if [ ! $# = 2 ];
then
  USAGE_FUNCTION
  exit 1
fi

# 引数1がpingかhttpでなければUsageを表示して異常終了する (完全一致、大文字小文字不問)
D1_CHECK_VARIABLE_STATUS=$(
echo ${MODE} | egrep -i '^(ping|http)$' > /dev/null ; echo $?
)
if [ ! ${D1_CHECK_VARIABLE_STATUS} = 0 ];
then
  USAGE_FUNCTION
  exit 1
fi
MAIN_FUNCTION
################################################################################
